{"version":3,"sources":["DragPage/OrderForm.js","DragPage/DragPage.js","App.js","index.js"],"names":["Title","Typography","Text","layout","labelCol","span","wrapperCol","size","tailLayout","offset","validateMessages","required","OrderForm","useState","formData","setFormData","Form","useForm","form","onFinish","values","console","log","level","Item","label","name","rules","showSearch","style","width","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","Option","value","Group","Button","getFieldValue","validator","rule","pesel","toString","weight","sum","controlNumber","parseInt","substring","i","length","isValidPesel","Promise","resolve","reject","type","htmlType","onClick","resetFields","pacient","surname","DragPage","className","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce6a21b4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  DatePicker,\n  Form,\n  Input,\n  InputNumber,\n  Select,\n  Typography,\n  Radio,\n} from \"antd\";\n\nconst { Title, Text } = Typography;\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n  layout: \"horizontal\",\n  size: \"small\",\n};\n\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst isValidPesel = (pesel) => {\n  if (!pesel) return false;\n  pesel = pesel.toString();\n  if (typeof pesel !== \"string\") return false;\n\n  let weight = [1, 3, 7, 9, 1, 3, 7, 9, 1, 3];\n  let sum = 0;\n  let controlNumber = parseInt(pesel.substring(10, 11));\n\n  for (let i = 0; i < weight.length; i++) {\n    sum += parseInt(pesel.substring(i, i + 1)) * weight[i];\n  }\n  sum = sum % 10;\n  return (10 - sum) % 10 === controlNumber;\n};\n\nconst validateMessages = {\n  required: \"${label} jest wymagane!\",\n};\n\nconst OrderForm = () => {\n  const [formData, setFormData] = useState(null);\n  const [form] = Form.useForm();\n\n  const onReset = () => {\n    form.resetFields();\n  };\n  const onFinish = (values) => {\n    console.log(values);\n    setFormData(values);\n  };\n\n  return (\n    <Form\n      {...layout}\n      onFinish={onFinish}\n      validateMessages={validateMessages}\n      form={form}\n    >\n      <Title level={3}>Panel tworzenia zlecenia lekowego dla pacjenta</Title>\n      <Text>Informacje o leku</Text>\n      <Form.Item\n        label=\"Nazwa\"\n        name={[\"medicine\", \"name\"]}\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Select\n          showSearch\n          style={{ width: 200 }}\n          placeholder=\"Wybierz lek\"\n          optionFilterProp=\"children\"\n          filterOption={(input, option) =>\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          }\n        >\n          <Select.Option value=\"Avifavir\">Avifavir</Select.Option>\n          <Select.Option value=\"Abakawir\">Abakawir</Select.Option>\n          <Select.Option value=\"Abasaglar\">Abasaglar</Select.Option>\n          <Select.Option value=\"Abelcyt\">Abelcyt</Select.Option>\n          <Select.Option value=\"ABE\">ABE</Select.Option>\n        </Select>\n      </Form.Item>\n      <Form.Item\n        label=\"Pora podania\"\n        name={[\"medicine\", \"hour-of-application\"]}\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Radio.Group>\n          <Radio.Button value=\"8:00\">8:00</Radio.Button>\n          <Radio.Button value=\"15:00\">15:00</Radio.Button>\n          <Radio.Button value=\"22:00\">22:00</Radio.Button>\n        </Radio.Group>\n      </Form.Item>\n      <Form.Item\n        label=\"Data podania\"\n        name={[\"medicine\", \"date-of-application\"]}\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <DatePicker placeholder=\"Wybierz datę\" />\n      </Form.Item>\n      <Form.Item\n        label=\"Ilość w tabletkach\"\n        name={[\"medicine\", \"quantity\"]}\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name={[\"medicine\", \"hospital-section\"]}\n        label=\"Oddział\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Select>\n          <Select.Option value=\"oddział A\">oddział A</Select.Option>\n          <Select.Option value=\"oddział B\">oddział B</Select.Option>\n          <Select.Option value=\"oddział C\">oddział C</Select.Option>\n        </Select>\n      </Form.Item>\n      <Text>Dane pacjenta</Text>\n      <Form.Item\n        name={[\"pacient\", \"name\"]}\n        label=\"Imię\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={[\"pacient\", \"surname\"]}\n        label=\"Nazwisko\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={[\"pacient\", \"pesel\"]}\n        label=\"PESEL\"\n        rules={[\n          {\n            required: true,\n          },\n          ({ getFieldValue }) => ({\n            validator(rule, value) {\n              if (isValidPesel(getFieldValue([\"pacient\", \"pesel\"]))) {\n                return Promise.resolve();\n              }\n              return Promise.reject(\"Nie poprawny PESEL!\");\n            },\n          }),\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Wyślij\n        </Button>\n        <Button htmlType=\"button\" onClick={onReset}>\n          Reset\n        </Button>\n      </Form.Item>\n      {formData && (\n        <Text>\n          Ostatnie wysłane zlecenie było dla pacjenta: {formData.pacient.name}{\" \"}\n          {formData.pacient.surname}\n          <br />\n        </Text>\n      )}\n      <Text>po wysłaniu dane można zobaczyć w konsoli</Text>\n    </Form>\n  );\n};\n\nexport default OrderForm;\n","import React from \"react\";\nimport OrderForm from \"./OrderForm\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\n\nconst DragPage = () => {\n  return (\n    <div className=\"box-wrapper-grid\">\n      <div className=\"box\">\n        <OrderForm />\n      </div>\n    </div>\n  );\n};\n\nexport default DragPage;\n","import React from 'react';\nimport DragPage from \"./DragPage/DragPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main>\n        <DragPage/>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}